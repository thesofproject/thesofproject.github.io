<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="583px" preserveAspectRatio="none" style="width:923px;height:583px;" version="1.1" viewBox="0 0 923 583" width="923px" zoomAndPan="magnify"><defs><filter height="300%" id="f9tjv9vxp4yew" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><rect fill="#DDDDDD" height="561.1563" style="stroke: #A1A1CA; stroke-width: 1.0;" width="138" x="237" y="4"/><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="119" x="246.5" y="16.0669">Module Adapter</text><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="99" x="256.5" y="31.1997">o-- comp_ops</text><rect fill="#DDDDDD" height="561.1563" style="stroke: #A1A1CA; stroke-width: 1.0;" width="165" x="494" y="4"/><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="159" x="497" y="16.0669">IADK Module Adapter</text><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="152" x="500.5" y="31.1997">o-- module_interface</text><rect fill="#DDDDDD" height="561.1563" style="stroke: #A1A1CA; stroke-width: 1.0;" width="231" x="681.5" y="4"/><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="94" x="750" y="16.0669">IADK Module</text><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="225" x="684.5" y="31.1997">o-- ProcessingModuleInterface</text><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="444.7266" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="301" y="117.4297"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="131.5313" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="306" y="308.2266"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="55.2656" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="306" y="476.8906"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="43.1328" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="571.5" y="396.625"/><line style="stroke: #F05772; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="38" x2="38" y1="86.2969" y2="571.1563"/><line style="stroke: #F05772; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="306" x2="306" y1="86.2969" y2="571.1563"/><line style="stroke: #F05772; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="576.5" x2="576.5" y1="86.2969" y2="571.1563"/><line style="stroke: #F05772; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="796.5" x2="796.5" y1="86.2969" y2="571.1563"/><text fill="#33335B" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="54" x="8" y="82.9951">pipeline</text><ellipse cx="38" cy="13" fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" rx="8" ry="8" style="stroke: #33335B; stroke-width: 2.0;"/><path d="M38,21 L38,48 M25,29 L51,29 M38,48 L25,63 M38,48 L51,63 " fill="none" filter="url(#f9tjv9vxp4yew)" style="stroke: #33335B; stroke-width: 2.0;"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="30.2969" style="stroke: #33335B; stroke-width: 1.5;" width="126" x="241" y="51"/><text fill="#33335B" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="112" x="248" y="70.9951">module_adapter</text><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="30.2969" style="stroke: #33335B; stroke-width: 1.5;" width="102" x="523.5" y="51"/><text fill="#33335B" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="88" x="530.5" y="70.9951">iadk_adapter</text><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="30.2969" style="stroke: #33335B; stroke-width: 1.5;" width="101" x="744.5" y="51"/><text fill="#33335B" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="87" x="751.5" y="70.9951">iadk_module</text><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="444.7266" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="301" y="117.4297"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="131.5313" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="306" y="308.2266"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="55.2656" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="306" y="476.8906"/><rect fill="#FFFFFF" filter="url(#f9tjv9vxp4yew)" height="43.1328" style="stroke: #F05772; stroke-width: 1.0;" width="10" x="571.5" y="396.625"/><polygon fill="#F05772" points="289,113.4297,299,117.4297,289,121.4297,293,117.4297" style="stroke: #F05772; stroke-width: 1.0;"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="38" x2="295" y1="117.4297" y2="117.4297"/><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="244" x="45" y="112.3638">(1) ops-&gt;module_adapter_copy()</text><line style="stroke: #F05772; stroke-width: 1.0;" x1="311" x2="353" y1="161.6953" y2="161.6953"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="353" x2="353" y1="161.6953" y2="174.6953"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="312" x2="353" y1="174.6953" y2="174.6953"/><polygon fill="#F05772" points="322,170.6953,312,174.6953,322,178.6953,318,174.6953" style="stroke: #F05772; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="90" x="318" y="141.4966">find min bytes</text><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="67" x="318" y="156.6294">to process</text><path d="M16,187.6953 L16,212.6953 L292,212.6953 L292,197.6953 L282,187.6953 L16,187.6953 " fill="#F6ED80" filter="url(#f9tjv9vxp4yew)" style="stroke: #D6D6DE; stroke-width: 1.0;"/><path d="M282,187.6953 L282,197.6953 L292,197.6953 L282,187.6953 " fill="#F6ED80" style="stroke: #D6D6DE; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="255" x="22" y="204.7622">This logic is WRONG for some modules!!</text><line style="stroke: #F05772; stroke-width: 1.0;" x1="311" x2="353" y1="258.0938" y2="258.0938"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="353" x2="353" y1="258.0938" y2="271.0938"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="312" x2="353" y1="271.0938" y2="271.0938"/><polygon fill="#F05772" points="322,267.0938,312,271.0938,322,275.0938,318,271.0938" style="stroke: #F05772; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="154" x="318" y="237.895">copy input from sources</text><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="113" x="318" y="253.0278">to internal buffers</text><line style="stroke: #F05772; stroke-width: 1.0;" x1="311" x2="358" y1="295.2266" y2="295.2266"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="358" x2="358" y1="295.2266" y2="308.2266"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="317" x2="358" y1="308.2266" y2="308.2266"/><polygon fill="#F05772" points="327,304.2266,317,308.2266,327,312.2266,323,308.2266" style="stroke: #F05772; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="115" x="323" y="290.1606">module_process()</text><path d="M66,326.2266 L66,366.2266 L292,366.2266 L292,336.2266 L282,326.2266 L66,326.2266 " fill="#F6ED80" filter="url(#f9tjv9vxp4yew)" style="stroke: #D6D6DE; stroke-width: 1.0;"/><path d="M282,326.2266 L282,336.2266 L292,336.2266 L282,326.2266 " fill="#F6ED80" style="stroke: #D6D6DE; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="205" x="72" y="343.2935">Why all those extra internal calls</text><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="110" x="72" y="358.4263">used only once??</text><polygon fill="#F05772" points="559.5,392.625,569.5,396.625,559.5,400.625,563.5,396.625" style="stroke: #F05772; stroke-width: 1.0;"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="316" x2="565.5" y1="396.625" y2="396.625"/><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="139" x="323" y="391.5591">(2) ops-&gt;process()</text><polygon fill="#F05772" points="785,421.7578,795,425.7578,785,429.7578,789,425.7578" style="stroke: #F05772; stroke-width: 1.0;"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="581.5" x2="791" y1="425.7578" y2="425.7578"/><text fill="#33335B" font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="107" x="588.5" y="420.6919">(3) processing</text><polygon fill="#F05772" points="322,435.7578,312,439.7578,322,443.7578,318,439.7578" style="stroke: #F05772; stroke-width: 1.0;"/><line style="stroke: #F05772; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="316" x2="575.5" y1="439.7578" y2="439.7578"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="311" x2="358" y1="463.8906" y2="463.8906"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="358" x2="358" y1="463.8906" y2="476.8906"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="317" x2="358" y1="476.8906" y2="476.8906"/><polygon fill="#F05772" points="327,472.8906,317,476.8906,327,480.8906,323,476.8906" style="stroke: #F05772; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="221" x="323" y="458.8247">module_adapter_process_output()</text><line style="stroke: #F05772; stroke-width: 1.0;" x1="316" x2="358" y1="531.1563" y2="531.1563"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="358" x2="358" y1="531.1563" y2="544.1563"/><line style="stroke: #F05772; stroke-width: 1.0;" x1="311" x2="358" y1="544.1563" y2="544.1563"/><polygon fill="#F05772" points="321,540.1563,311,544.1563,321,548.1563,317,544.1563" style="stroke: #F05772; stroke-width: 1.0;"/><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="210" x="323" y="510.9575">copy output from internal buffers</text><text fill="#33335B" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="45" x="323" y="526.0903">tosinks</text><polygon fill="#F05772" points="49,549.1563,39,553.1563,49,557.1563,45,553.1563" style="stroke: #F05772; stroke-width: 1.0;"/><line style="stroke: #F05772; stroke-width: 1.0; stroke-dasharray: 2.0,2.0;" x1="43" x2="300" y1="553.1563" y2="553.1563"/><!--MD5=[d84e0704736fad03407ac867c91e93a9]
@startuml
hidefootbox
skinparam componentStyle uml2

skinparam defaultFontColor	#33335b

skinparam rectangle {
	color		#d6d6de
	backgroundColor	#ffffff
}

skinparam component {
	backgroundColor	#ffffff
	borderColor	#33335b
	arrowColor	#f05772
}

skinparam interface {
	backgroundColor	#ffffff
	borderColor	#f05772
}

skinparam class {
	backgroundColor	#ffffff
	borderColor	#33335b
	arrowColor	#f05772
}
skinparam stereotypeCBackgroundColor	#6fccdd

skinparam sequence {
	arrowColor		#4a4a86
	lifeLineBorderColor	#f05772
	groupBorderColor	#a1a1ca
	boxBorderColor		#a1a1ca
	dividerBorderColor	#d6d6de
	dividerBorderThickness	1
}
skinparam participant {
	borderColor		#33335b
	backgroundColor		#ffffff
}
skinparam actor {
	borderColor		#33335b
	backgroundColor		#ffffff
}

skinparam state {
	borderColor		#33335b
	backgroundColor		#ffffff
}

skinparam node {
	backgroundColor		#ffffff
}

skinparam note {
	backgroundColor 	#f6ed80
	borderColor		#d6d6de
}

skinparam activity {
	borderColor		#33335b
	backgroundColor		#ffffff
}

skinparam activityDiamond {
	borderColor		#33335b
	backgroundColor		#ffffff
}

skinparam arrowColor	#f05772
skinparam maxMessageSize 400
skinparam BoxPadding 4
actor pipeline
box "Module Adapter\no- - comp_ops"
	participant "module_adapter" as module_adapter
end box
box "IADK Module Adapter\no- - module_interface"
	participant "iadk_adapter" as iadk_adapter
end box
box "IADK Module\no- - ProcessingModuleInterface"
	participant iadk_module
end box

pipeline -> module_adapter : <b>(1) ops->module_adapter_copy()</b>
	activate module_adapter

	module_adapter -> module_adapter : find min bytes\nto process

	note left of module_adapter
	This logic is WRONG for some modules!!
	end note

	module_adapter -> module_adapter : copy input from sources\nto internal buffers

	module_adapter -> module_adapter : module_process()
		activate module_adapter
note left of module_adapter
Why all those extra internal calls
used only once??
end note

		module_adapter -> iadk_adapter : <b>(2) ops->process()</b>
			activate iadk_adapter
			iadk_adapter -> iadk_module : <b>(3) processing</b>
		module_adapter <- - iadk_adapter
		deactivate iadk_adapter

	deactivate module_adapter

	module_adapter -> module_adapter : module_adapter_process_output()
		activate module_adapter
		module_adapter -> module_adapter : copy output from internal buffers\ntosinks
	deactivate module_adapter
pipeline <- - module_adapter

@enduml

PlantUML version 1.2019.12(Sun Nov 03 10:24:54 UTC 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.20.1+1
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>